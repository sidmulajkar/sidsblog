<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data-structure on &gt; sidmulajkar</title>
    <link>https://sidmulajkar.com/categories/data-structure/</link>
    <description>Recent content in data-structure on &gt; sidmulajkar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Dec 2021 17:26:04 +0530</lastBuildDate><atom:link href="https://sidmulajkar.com/categories/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Databases! How do we know it&#39;s the right one? </title>
      <link>https://sidmulajkar.com/posts/databases-how-do-we-know-its-the-right-one/</link>
      <pubDate>Thu, 23 Dec 2021 17:26:04 +0530</pubDate>
      
      <guid>https://sidmulajkar.com/posts/databases-how-do-we-know-its-the-right-one/</guid>
      <description>Choosing the Best Database
Databases! How do you know itâ€™s the right one?
 Whether you are an experienced software engineer or a student doing a university project, at some point we will need to choose a DB for our project.
Choosing the right kind of database always requires some consideration.
First of all, databases will not impact our functional requirements.
Whichever database we use can still achieve our functional requirements somehow, but at the cost of huge performance degradation.</description>
    </item>
    
    <item>
      <title>Message Queues! What are those and when to use them? </title>
      <link>https://sidmulajkar.com/posts/message-queues/</link>
      <pubDate>Fri, 26 Nov 2021 17:26:04 +0530</pubDate>
      
      <guid>https://sidmulajkar.com/posts/message-queues/</guid>
      <description>Message queues &amp;hellip;ðŸ“¨ ðŸ“¨
What are those and when to use them?
The role of message queuing in a micro-service architecture.
When is the right time to use a message queue and why is a database rarely the best tool for a queue-based problem?
A blog on backend engineering&amp;hellip;
 Imagine that you have a web application for customers to upload a text document, which then converts it into a PDF, and then emails it back to the customer.</description>
    </item>
    
    <item>
      <title>When Indexes are not Useable sometimes!</title>
      <link>https://sidmulajkar.com/posts/when-indexes-are-not-useable/</link>
      <pubDate>Tue, 16 Nov 2021 17:26:04 +0530</pubDate>
      
      <guid>https://sidmulajkar.com/posts/when-indexes-are-not-useable/</guid>
      <description>What do I even mean by useless indexes?
 To improve the application and the database, indexes need to change over time.
As the structure of the database change, the structure of the tables change, data in the tables change, the application changes, also the queries against the data change.
Indexes that once helped performance now just bloat your database and cause extra work for inserts, updates, and deletes.
wait&amp;hellip;</description>
    </item>
    
    <item>
      <title>B/B&#43; Trees How they are helpful in Database?</title>
      <link>https://sidmulajkar.com/posts/b-bplus-trees/</link>
      <pubDate>Mon, 25 Oct 2021 17:26:04 +0530</pubDate>
      
      <guid>https://sidmulajkar.com/posts/b-bplus-trees/</guid>
      <description>What are those? Ever used those while searching through the dataset.
How they are useful in databases?
 To understand stuff more clearly let&amp;rsquo;s take a scenario:
Like you have a table, a huge table(millions of rows to go through), and you want to search to a particular numbered row by some id mentioned &amp;ldquo;100035&amp;rdquo; and not only pulling a row but getting most out of the pulled row.
For the longest time, what we do is search the table one by one sequentially (page by page).</description>
    </item>
    
  </channel>
</rss>
